definitions:
  response.AddTagToPaper:
    properties:
      paper_id:
        type: string
      tag_id:
        type: integer
      user_id:
        type: integer
    required:
    - paper_id
    - tag_id
    - user_id
    type: object
  response.AddUserConceptQ:
    properties:
      concept_id:
        type: string
    required:
    - concept_id
    type: object
  response.AdvancedSearchQ:
    properties:
      asc:
        type: boolean
      conds:
        additionalProperties:
          type: string
        type: object
      page:
        type: integer
      query:
        items:
          additionalProperties:
            type: string
          type: object
        type: array
      size:
        type: integer
      sort:
        type: integer
    type: object
  response.AuthorRelationNet:
    properties:
      edge_set:
        items:
          additionalProperties: true
          type: object
        type: array
      vertex_set:
        items:
          additionalProperties: true
          type: object
        type: array
    type: object
  response.BaseSearchQ:
    properties:
      asc:
        type: boolean
      conds:
        additionalProperties:
          type: string
        type: object
      kind:
        type: string
      page:
        type: integer
      queryWord:
        type: string
      size:
        type: integer
      sort:
        type: integer
    type: object
  response.CommentCreation:
    properties:
      content:
        type: string
      paper_id:
        type: string
      user_id:
        type: integer
    required:
    - content
    - paper_id
    - user_id
    type: object
  response.CommentListQuery:
    properties:
      paper_id:
        type: string
      user_id:
        type: integer
    required:
    - paper_id
    - user_id
    type: object
  response.CommentUser:
    properties:
      comment_id:
        type: integer
      user_id:
        type: integer
    required:
    - comment_id
    - user_id
    type: object
  response.CreateApplicationQ:
    properties:
      author_id:
        type: string
      author_name:
        type: string
      content:
        type: string
      email:
        type: string
      institution:
        type: string
      user_id:
        type: integer
      verify_code:
        type: string
    required:
    - author_id
    - author_name
    - email
    - institution
    - user_id
    - verify_code
    type: object
  response.FollowAuthorQ:
    properties:
      author_id:
        type: string
      user_id:
        type: integer
    required:
    - author_id
    - user_id
    type: object
  response.GetBrowseHistoryQ:
    properties:
      page:
        type: integer
      size:
        type: integer
    type: object
  response.GetPaperPDFQ:
    properties:
      work_id:
        description: AuthorID string `json:"author_id" binding:"required"`
        type: string
    required:
    - work_id
    type: object
  response.GetPersonalWorksQ:
    properties:
      author_id:
        type: string
      display:
        type: integer
      page:
        type: integer
      page_size:
        type: integer
    required:
    - author_id
    - page
    - page_size
    type: object
  response.GetUserFollowsQ:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
  response.GetVerifyCodeQ:
    properties:
      email:
        type: string
      user_id:
        type: integer
    required:
    - email
    - user_id
    type: object
  response.HandleApplicationQ:
    properties:
      application_id:
        type: integer
      content:
        description: 审批意见
        type: string
      status:
        description: 是否通过
        type: integer
      user_id:
        description: 谁审核的
        type: integer
    required:
    - application_id
    - status
    - user_id
    type: object
  response.IgnoreWorkQ:
    properties:
      author_id:
        type: string
      work_id:
        type: string
    required:
    - author_id
    - work_id
    type: object
  response.LoginQ:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  response.ModifyAuthorIntroQ:
    properties:
      author_id:
        type: string
      intro:
        type: string
    required:
    - author_id
    type: object
  response.ModifyPlaceQ:
    properties:
      author_id:
        type: string
      direction:
        type: integer
      work_id:
        type: string
    required:
    - author_id
    - direction
    - work_id
    type: object
  response.ModifyQ:
    properties:
      email:
        description: 邮箱
        type: string
      fields:
        description: 研究领域
        type: string
      name:
        description: 真实姓名
        type: string
      phone:
        description: 电话号码
        type: string
      user_id:
        type: string
      user_info:
        description: 个性签名
        type: string
    required:
    - user_id
    type: object
  response.PaperBelongingQ:
    properties:
      paper_id:
        type: string
      user_id:
        type: integer
    required:
    - paper_id
    - user_id
    type: object
  response.PwdModifyQ:
    properties:
      password_new:
        minLength: 6
        type: string
      password_old:
        minLength: 6
        type: string
      user_id:
        type: string
    required:
    - password_new
    - password_old
    - user_id
    type: object
  response.RegisterQ:
    properties:
      password:
        minLength: 6
        type: string
      username:
        minLength: 1
        type: string
    required:
    - password
    - username
    type: object
  response.RenameTagQ:
    properties:
      new_tag_name:
        type: string
      tag_id:
        type: integer
      user_id:
        type: integer
    required:
    - new_tag_name
    - tag_id
    - user_id
    type: object
  response.TagCreation:
    properties:
      tag_name:
        type: string
      user_id:
        type: integer
    required:
    - tag_name
    - user_id
    type: object
  response.TagPaperListQ:
    properties:
      tag_id:
        type: integer
      user_id:
        type: integer
    required:
    - tag_id
    - user_id
    type: object
  response.TopWorkQ:
    properties:
      author_id:
        type: string
      work_id:
        type: string
    required:
    - author_id
    - work_id
    type: object
  response.UserInfo:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
info:
  contact: {}
paths:
  /application/code:
    post:
      consumes:
      - application/json
      description: 用户点击"获取验证码"按钮，系统向用户提供的邮箱发送6位验证码，用户需要在申请表单中填入验证码才可以成功完成身份验证，否则不应该可以提交申请。验证码时限为10分钟，超时无效
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetVerifyCodeQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "邮件发送成功","status": 200}'
          schema:
            type: string
        "400":
          description: '{"msg": "数据格式错误", "status": 400}'
          schema:
            type: string
        "401":
          description: '{"msg": "没有该用户", "status": 401}'
          schema:
            type: string
        "402":
          description: '{"msg": "验证码存储失败","status": 402}'
          schema:
            type: string
        "403":
          description: '{"msg": "发送邮件失败","status": 403}'
          schema:
            type: string
      summary: 获取申请验证码 Vera
      tags:
      - 管理
  /application/create:
    post:
      consumes:
      - application/json
      description: 用户可以申请认领自己的学者门户
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CreateApplicationQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "申请成功", "status": 200,"application": application}'
          schema:
            type: string
        "400":
          description: '{"msg": "数据格式错误", "status": 400}'
          schema:
            type: string
        "401":
          description: '{"msg": "没有该用户", "status": 401}'
          schema:
            type: string
        "402":
          description: '{"msg": "创建申请失败", "status": 402}'
          schema:
            type: string
        "403":
          description: '{"msg": "该学者已被认领", "status": 403}'
          schema:
            type: string
      summary: 申请学者门户 Vera & txc
      tags:
      - 管理
  /application/handle:
    post:
      consumes:
      - application/json
      description: 管理员对用户提交的申请进行审核，并给出审核意见content
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.HandleApplicationQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "审核成功", "status": 200}'
          schema:
            type: string
        "400":
          description: '{"msg": "数据格式错误", "status": 400}'
          schema:
            type: string
        "401":
          description: '{"msg": "管理员不存在 or 不是管理员", "status": 401}'
          schema:
            type: string
        "402":
          description: '{"msg": "申请不存在", "status": 402}'
          schema:
            type: string
        "403":
          description: '{"msg": "已审核过该申请", "status": 403}'
          schema:
            type: string
        "404":
          description: '{"msg": "数据库错误", "status": 404}'
          schema:
            type: string
      summary: 审核学者门户申请 Vera & txc
      tags:
      - 管理
  /application/list:
    get:
      description: 显示未审核的申请列表
      responses:
        "200":
          description: '{"applications": []database.Application, "msg": "获取成功", "status":
            200}'
          schema:
            type: string
      summary: 显示未审核的申请列表 Vera & txc
      tags:
      - 管理
  /es/get/:
    get:
      description: 根据id获取对象，可以是author，work，institution,venue,concept W4237558494,W2009180309,W2984203759
      parameters:
      - description: 对象id
        in: query
        name: id
        required: true
        type: string
      - description: 用户id
        in: query
        name: userid
        type: string
      responses:
        "200":
          description: '{"status":200,"res":{}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"id type error"}'
          schema:
            type: string
        "404":
          description: '{"status":201,"msg":"es get err or not found"}'
          schema:
            type: string
      summary: 根据id获取对象 txc
      tags:
      - esSearch
  /es/get2/:
    get:
      description: 根据id获取对象，可以是author，work，institution,venue,concept W4237558494,W2009180309,W2984203759
      parameters:
      - description: 对象id
        in: query
        name: id
        required: true
        type: string
      - description: 用户id
        in: query
        name: userid
        type: string
      responses:
        "200":
          description: '{"status":200,"res":{}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"id type error"}'
          schema:
            type: string
        "404":
          description: '{"status":201,"msg":"es get err or not found"}'
          schema:
            type: string
      summary: 根据id获取对象 txc
      tags:
      - esSearch
  /es/getAuthorRelationNet:
    get:
      description: |
        根据author的id获取专家关系网络, 目前会返回Top N的关系网，N=10，后续可以讨论修改N的大小或者传参给我

        目前接口时延约为1s, 后续考虑把计算出来的结果存入数据库，二次查询时延降低
      parameters:
      - description: author_id
        enum:
        - A2764814280
        - A2900471938
        - A2227665069
        in: query
        name: author_id
        required: true
        type: string
      responses:
        "200":
          description: '{"res":{ "Vertex_set":[], "Edge_set":[]}}'
          schema:
            $ref: '#/definitions/response.AuthorRelationNet'
        "201":
          description: '{"msg":"Get Author Relation Net Error"}'
          schema:
            type: string
      summary: 根据author的id获取专家关系网络 hr
      tags:
      - esSearch
  /es/prefix:
    post:
      description: 根据前缀得到搜索建议，返回results 字符串数组
      parameters:
      - description: Field 表示需要查询的字段名
        in: query
        name: Field
        required: true
        type: string
      - description: Prefix 表示用户已经输入的前缀
        in: query
        name: Prefix
        required: true
        type: string
      responses:
        "200":
          description: '{"success": true, "msg": "获取成功"}'
          schema:
            type: string
        "400":
          description: '{"success": false, "msg": 参数错误"}'
          schema:
            type: string
        "402":
          description: '{"success": false, "msg": "es服务出错"}'
          schema:
            type: string
      summary: 根据前缀得到搜索建议，返回results 字符串数组 hr
      tags:
      - esSearch
  /es/search/advanced:
    post:
      consumes:
      - application/json
      description: |-
        高级搜索，query是一个map列表， 每个map包含"content" "field" "logic"
        logic 仅包含["and", "or", "not"]
        field 仅包含["title", "abstract", "venue", "publisher", "author", "institution", "concept"]
        对于年份的筛选，在query里面 field是"publication_date" logic默认为and， 该map下有"begin" "end"分别是开始和结束
        sort=0为默认排序（降序） =1为按引用数降序 =2按发表日期由近到远
        asc=0为降序 =1为升序
        { "asc": false,"conds": {"venue":"International Journal for Research in Applied Science and Engineering Technology","author": "Zenith Nandy"},"page": 1,"query": [{"field": "title","content": "python","logic": "and"},{"field": "publication_date","begin": "2021-12-01","end":"2022-06-01","logic": "and"}],"size": 8,"sort": 0}
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.AdvancedSearchQ'
      produces:
      - application/json
      responses: {}
      summary: 高级搜索 txc
      tags:
      - esSearch
  /es/search/author:
    get:
      description: 根据作者名字搜索作者,模糊搜索
      parameters:
      - description: query_word
        in: query
        name: query_word
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: size
        in: query
        name: size
        required: true
        type: integer
      - description: sort
        in: query
        name: sort
        required: true
        type: integer
      - description: asc
        in: query
        name: asc
        required: true
        type: boolean
      responses:
        "200":
          description: '{"res":{},"msg": "Author Search Success"}'
          schema:
            type: string
        "401":
          description: '{"msg": "Author Search Error","err":err}'
          schema:
            type: string
      summary: txc
      tags:
      - esSearch
  /es/search/author2:
    get:
      description: 根据作者名字搜索作者 via openalex
      parameters:
      - description: query_word
        in: query
        name: query_word
        required: true
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      - description: sort=cited_by_count|...:_|desc|asc
        in: query
        name: sort
        type: string
      responses:
        "200":
          description: '{"res":{},"msg": "Author Search Success"}'
          schema:
            type: string
        "401":
          description: '{"msg": "openalex Search Error","err":err}'
          schema:
            type: string
        "402":
          description: '{"msg": "openalex Search Error","err":err}'
          schema:
            type: string
      summary: txc
      tags:
      - esSearch
  /es/search/base:
    post:
      consumes:
      - application/json
      description: 基本搜索，Cond里面填筛选条件，key仅包含["type", "author", "institution", "publisher",
        "venue", "publication_year"]
      parameters:
      - description: 搜索条件
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.BaseSearchQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"res":{obeject}}'
          schema:
            type: string
        "201":
          description: '{"status":201,"err":"es search err"}'
          schema:
            type: string
      summary: 基本搜索 txc
      tags:
      - esSearch
  /es/search/doi:
    post:
      description: 使用doi查找work，未测试，请勿使用
      parameters:
      - description: doi
        in: query
        name: doi
        required: true
        type: string
      responses: {}
      summary: 使用doi查找work，未测试，请勿使用 txc
      tags:
      - esSearch
  /es/statistic:
    get:
      description: 获取统计信息
      responses:
        "200":
          description: '{"res":{}}'
          schema:
            type: string
        "301":
          description: '{"err":{}}'
          schema:
            type: string
      summary: 获取统计信息 txc
      tags:
      - esSearch
  /info/register_num:
    get:
      description: 统计网站信息，该接口不需要前端参数
      responses:
        "200":
          description: '{"status": 200, "register_num": int}'
          schema:
            type: string
      summary: 获取网站所有注册用户数量 Vera
      tags:
      - 网站信息
  /info/verified_num:
    get:
      description: 获取网站认证学者数
      responses:
        "200":
          description: '{"status": 200, "verified_num": num}'
          schema:
            type: string
      summary: 获取网站认证学者数   Vera
      tags:
      - 网站信息
  /login:
    post:
      consumes:
      - application/json
      description: |-
        登录
        填入用户名和密码
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.LoginQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"登录成功","token": token,"ID": user.UserID}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户名不存在"}'
          schema:
            type: string
        "401":
          description: '{"status":401,"msg":"密码错误"}'
          schema:
            type: string
      summary: 登录 ccf
      tags:
      - 用户
  /register:
    post:
      consumes:
      - application/json
      description: |-
        注册
        填入用户名和密码注册
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.RegisterQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"注册成功"}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户名已存在"}'
          schema:
            type: string
      summary: 注册 ccf
      tags:
      - 用户
  /scholar/author/headshot:
    post:
      description: 上传作者头像
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 学者ID
        in: formData
        name: author_id
        required: true
        type: string
      - description: 新头像
        in: formData
        name: Headshot
        required: true
        type: file
      responses:
        "200":
          description: '{"msg":"上传成功","data": author}'
          schema:
            type: string
        "400":
          description: '{"msg":"学者未被认领"}'
          schema:
            type: string
        "401":
          description: '{"msg":"无权限"}'
          schema:
            type: string
        "402":
          description: '{"msg":"头像文件获取失败"}'
          schema:
            type: string
      summary: 上传作者头像 txc
      tags:
      - scholar
  /scholar/author/intro:
    post:
      consumes:
      - application/json
      description: 修改作者简介
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.ModifyAuthorIntroQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"修改成功"}'
          schema:
            type: string
        "400":
          description: '{"msg":"参数错误"}'
          schema:
            type: string
        "401":
          description: '{"msg":"无权限"}'
          schema:
            type: string
        "404":
          description: '{"msg":"学者未被认领"}'
          schema:
            type: string
      summary: txc
      tags:
      - scholar
  /scholar/concept:
    get:
      description: 获取用户关注的关键词
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      responses:
        "200":
          description: '{"msg":"获取成功","data":{}}'
          schema:
            type: string
        "401":
          description: '{"msg":"数据库获取失败"}'
          schema:
            type: string
      summary: 获取用户关注的关键词 txc
      tags:
      - scholar
    post:
      consumes:
      - application/json
      description: 添加user的关注关键词
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.AddUserConceptQ'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"添加成功"}'
          schema:
            type: string
        "400":
          description: '{"msg":"参数错误"}'
          schema:
            type: string
        "401":
          description: '{"msg":"用户不存在"}'
          schema:
            type: string
        "402":
          description: '{"msg":"concept不存在"}'
          schema:
            type: string
        "403":
          description: '{"msg":"添加失败"}'
          schema:
            type: string
        "404":
          description: '{"msg":"删除失败"}'
          schema:
            type: string
      summary: 添加user的关注关键词 txc
      tags:
      - scholar
  /scholar/hot:
    get:
      description: 获取热门论文（根据访问量）
      responses:
        "200":
          description: '{"msg":"获取成功","data":{}}'
          schema:
            type: string
        "400":
          description: '{"msg":"获取失败"}'
          schema:
            type: string
      summary: 获取热门论文（根据访问量） txc
      tags:
      - scholar
  /scholar/roll:
    get:
      description: 获取用户推荐的论文 请勿使用
      parameters:
      - description: concept_id
        in: query
        name: concept_id
        type: string
      responses:
        "200":
          description: '{"msg":"获取成功","data":{}}'
          schema:
            type: string
        "401":
          description: '{"msg":"openalex获取失败"}'
          schema:
            type: string
      summary: 获取用户推荐的论文 请勿使用 txc
      tags:
      - scholar
  /scholar/works/get:
    post:
      consumes:
      - application/json
      description: |-
        获取学者的论文

        参数说明
        - author_id 作者的id

        - page 获取第几页的数据, START FROM 1

        - page_size 分页的大小, 不能为0

        - display 是否显示已删除的论文 -1不显示 1显示

        返回值说明
        - msg 返回信息

        - data 返回该页的works对象数组

        - pages 分页总数，一共有多少页

        - total 论文总数
      parameters:
      - description: data 是请求参数,包括author_id ,page ,page_size, display
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetPersonalWorksQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功","data":{}, "pages":{}, "total":{}}'
          schema:
            type: string
        "400":
          description: '{"msg":"参数错误"}'
          schema:
            type: string
        "401":
          description: '{"msg":"作者不存在"}'
          schema:
            type: string
        "402":
          description: '{"msg":"page超出范围"}'
          schema:
            type: string
        "403":
          description: '{"msg":"该作者没有论文"}'
          schema:
            type: string
      summary: 获取学者的论文 hr
      tags:
      - 学者主页的论文获取、管理
  /scholar/works/getpdf:
    post:
      consumes:
      - application/json
      description: |-
        获取学者上传的文章PDF地址

        参数说明
        - work_id 论文的id

        返回说明
        - pdf地址,直接使用即可，无需拼接
      parameters:
      - description: data 是请求参数work_id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetPaperPDFQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功", "data": "pdf地址"}'
          schema:
            type: string
        "400":
          description: '{"msg":"参数错误"}'
          schema:
            type: string
        "401":
          description: '{"msg":"未找到该论文"}'
          schema:
            type: string
        "402":
          description: '{"msg":"未上传PDF"}'
          schema:
            type: string
      summary: 获取学者上传的文章PDF地址 hr
      tags:
      - 学者主页的论文获取、管理
  /scholar/works/ignore:
    post:
      consumes:
      - application/json
      description: |-
        学者管理主页--忽略论文 通过重复调用该接口可以完成论文的忽略与取消忽略

        参数说明
        - author_id 作者的id

        - work_id 论文的id
      parameters:
      - description: data 是请求参数,包括author_id ,work_id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.IgnoreWorkQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"修改忽略属性成功"}'
          schema:
            type: string
        "400":
          description: '{"msg":"参数错误"}'
          schema:
            type: string
        "401":
          description: '{"msg":"修改忽略属性失败"}'
          schema:
            type: string
      summary: 学者管理主页--忽略论文 hr
      tags:
      - 学者主页的论文获取、管理
  /scholar/works/modify:
    post:
      consumes:
      - application/json
      description: |-
        学者管理主页--修改论文顺序

        参数说明
        - author_id 作者的id

        - work_id 论文的id

        - direction 论文的移动方向，1为向上，-1为向下
      parameters:
      - description: data 是请求参数,包括author_id ,work_id ,direction
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.ModifyPlaceQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"修改成功"}'
          schema:
            type: string
        "400":
          description: '{"msg":"参数错误"}'
          schema:
            type: string
        "401":
          description: '{"msg":"未找到该论文"}'
          schema:
            type: string
        "402":
          description: '{"msg":"论文已经在顶部"}'
          schema:
            type: string
        "403":
          description: '{"msg":"论文已经在底部"}'
          schema:
            type: string
        "404":
          description: '{"msg":"修改失败"}'
          schema:
            type: string
      summary: 学者管理主页--修改论文顺序 hr
      tags:
      - 学者主页的论文获取、管理
  /scholar/works/top:
    post:
      consumes:
      - application/json
      description: |-
        学者管理主页--置顶论文 通过重复调用而取消置顶

        参数说明
        - author_id 作者的id

        - work_id 论文的id
      parameters:
      - description: data 是请求参数,包括author_id ,work_id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.TopWorkQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"置顶成功"}'
          schema:
            type: string
        "400":
          description: '{"msg":"参数错误"}'
          schema:
            type: string
        "401":
          description: '{"msg":"未找到该论文"}'
          schema:
            type: string
        "402":
          description: '{"msg":"修改失败"}'
          schema:
            type: string
      summary: 学者管理主页--置顶论文 hr
      tags:
      - 学者主页的论文获取、管理
  /scholar/works/untop:
    post:
      consumes:
      - application/json
      description: |-
        学者管理主页--取消置顶论文

        参数说明
        - author_id 作者的id

        - work_id 论文的id
      parameters:
      - description: data 是请求参数,包括author_id ,work_id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.TopWorkQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"取消置顶成功"}'
          schema:
            type: string
        "400":
          description: '{"msg":"参数错误"}'
          schema:
            type: string
        "401":
          description: '{"msg":"未找到该论文"}'
          schema:
            type: string
        "402":
          description: '{"msg":"修改失败"}'
          schema:
            type: string
      summary: 学者管理主页--取消置顶论文 hr
      tags:
      - 学者主页的论文获取、管理
  /scholar/works/unupload:
    post:
      description: |-
        学者管理主页--取消上传作品PDF

        参数说明
        - author_id 作者的id

        - work_id 论文的id
      parameters:
      - description: 学者ID
        in: formData
        name: author_id
        required: true
        type: string
      - description: 论文ID
        in: formData
        name: work_id
        required: true
        type: string
      responses:
        "200":
          description: '{"msg":"取消上传成功"}'
          schema:
            type: string
        "400":
          description: '{"msg":"论文不存在"}'
          schema:
            type: string
        "403":
          description: '{"msg":"保存文件路径到数据库中失败"}'
          schema:
            type: string
      summary: 学者管理主页--取消上传作品PDF txc
      tags:
      - 学者主页的论文获取、管理
  /scholar/works/upload:
    post:
      description: |-
        学者管理主页--上传作品PDF

        参数说明
        - author_id 作者的id

        - work_id 论文的id

        - PDF 上传的PDF文件
      parameters:
      - description: 学者ID
        in: formData
        name: author_id
        required: true
        type: string
      - description: 论文ID
        in: formData
        name: work_id
        required: true
        type: string
      - description: PDF
        in: formData
        name: PDF
        required: true
        type: file
      responses: {}
      summary: 学者管理主页--上传作品PDF hr
      tags:
      - 学者主页的论文获取、管理
  /social/comment/create:
    post:
      consumes:
      - application/json
      description: 用户可以在某一篇文献的评论区中发表自己的评论
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CommentCreation'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"status":200,"msg":"评论创建成功","comment_id":string}'
          schema:
            type: string
        "400":
          description: '{"success":false,"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "403":
          description: '{"success":false,"status":403,"msg":"评论创建失败"}'
          schema:
            type: string
      summary: 用户可以在某一篇文献的评论区中发表自己的评论 Vera
      tags:
      - 社交
  /social/comment/like:
    post:
      description: 用户可以对某一评论进行点赞
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CommentUser'
      responses:
        "200":
          description: '{"success": true,"status":200,"msg": "操作成功"}'
          schema:
            type: string
        "400":
          description: '{"success": false,"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "402":
          description: '{"success": false,"status":402, "msg": "用户已赞过该评论"}'
          schema:
            type: string
        "403":
          description: '{"success": false,"status":403, "msg": "评论不存在"}'
          schema:
            type: string
      summary: 用户可以对某一评论进行点赞 Vera
      tags:
      - 社交
  /social/comment/list:
    post:
      consumes:
      - application/json
      description: 显示文献评论列表，时间倒序
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CommentListQuery'
      produces:
      - application/json
      responses:
        "200":
          description: '{"data":{"comments":[],"paper_id":"string"},"message":"查找成功"}'
          schema:
            type: string
        "400":
          description: '{"status": 400, "msg": "用户ID不存在"}'
          schema:
            type: string
        "404":
          description: '{"success": false, "status":  403,"message": "评论用户不存在"}'
          schema:
            type: string
      summary: 显示文献评论列表，时间倒序 Vera
      tags:
      - 社交
  /social/comment/unlike:
    post:
      description: 取消点赞
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CommentUser'
      responses:
        "200":
          description: '{"success": true,"status":200,"msg": "已取消点赞"}'
          schema:
            type: string
        "400":
          description: '{"success": false,"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "402":
          description: '{"success": false,"status":402, "msg": "用户未点赞"}'
          schema:
            type: string
        "403":
          description: '{"success": false,"status":403, "msg": "评论不存在"}'
          schema:
            type: string
      summary: 取消点赞 Vera
      tags:
      - 社交
  /social/follow:
    post:
      consumes:
      - application/json
      description: 关注学者 包括了关注和取消关注（通过重复调用来实现）
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.FollowAuthorQ'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "取消关注成功/关注成功"}'
          schema:
            type: string
        "400":
          description: '{"err":err,"msg": "参数错误"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 关注学者 包括了关注和取消关注（通过重复调用来实现） txc
      tags:
      - 社交
  /social/follow/list:
    post:
      consumes:
      - application/json
      description: 获取用户关注的学者
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetUserFollowsQ'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "查找成功","data":data,"count":count}'
          schema:
            type: string
        "400":
          description: '{"err":err,"msg": "参数错误"}'
          schema:
            type: string
        "401":
          description: '{"msg": "用户ID不存在"}'
          schema:
            type: string
      summary: 获取用户关注的学者 txc
      tags:
      - 社交
  /social/tag/cancelCollectPaper:
    post:
      consumes:
      - application/json
      description: 将某篇文献从收藏夹中移除
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.AddTagToPaper'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status": 200, "msg": "取消收藏成功"}'
          schema:
            type: string
        "400":
          description: '{"status": 400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status": 401, "msg": "用户无此收藏夹"}'
          schema:
            type: string
        "402":
          description: '{"status": 402, "msg": "文章不在此收藏夹下"}'
          schema:
            type: string
        "403":
          description: '{"status": 403, "msg": "取消收藏失败"}'
          schema:
            type: string
      summary: Vera
      tags:
      - 社交
  /social/tag/collectPaper:
    post:
      consumes:
      - application/json
      description: 将某篇文献加入到某一收藏夹下
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.AddTagToPaper'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status": 200, "msg": "收藏成功"}'
          schema:
            type: string
        "400":
          description: '{"status": 400, "msg":"用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status": 401, "msg": "用户无此收藏夹"}'
          schema:
            type: string
        "402":
          description: '{"status": 402, "msg": "文章已在此收藏夹下"}'
          schema:
            type: string
        "403":
          description: '{"status": 403, "msg": "收藏失败"}'
          schema:
            type: string
      summary: 将某篇文献加入到某一收藏夹下 Vera
      tags:
      - 社交
  /social/tag/create:
    post:
      consumes:
      - application/json
      description: 用户可以按照需要建立收藏夹
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.TagCreation'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status": 200, "msg": "收藏夹创建成功", "tag_id": tag.TagID}'
          schema:
            type: string
        "400":
          description: '{"status": 400, "msg":"用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status": 401, "msg":"收藏夹已存在，换个名字吧～"}'
          schema:
            type: string
        "402":
          description: '{"status": 402, "msg": "创建失败"}'
          schema:
            type: string
      summary: 用户可以按照需要建立收藏夹 Vera
      tags:
      - 社交
  /social/tag/delete:
    post:
      consumes:
      - application/json
      description: 删除标签
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.TagPaperListQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success": true,"status":200, "msg": "标签删除成功"}'
          schema:
            type: string
        "400":
          description: '{"success": false,"status":400, "msg": "用户ID不存在"}'
          schema:
            type: string
        "403":
          description: '{"success": false,"status":403, "msg": "标签不存在"}'
          schema:
            type: string
      summary: 删除标签 Vera
      tags:
      - 社交
  /social/tag/paperTagList:
    post:
      consumes:
      - application/json
      description: 返回用户所有的收藏夹列表，并一一标记文章是否从属于收藏夹
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.PaperBelongingQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"获取成功","data":data}'
          schema:
            type: string
        "400":
          description: '{"status": 400, "msg": "用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status": 401, "msg": "未查询到结果"}'
          schema:
            type: string
      summary: 查询文章所在的收藏夹 Vera
      tags:
      - 社交
  /social/tag/rename:
    post:
      consumes:
      - application/json
      description: 对原有的收藏夹重命名
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.RenameTagQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"修改成功"}'
          schema:
            type: string
        "400":
          description: '{"status": 400, "msg": "用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status": 401, "msg": "用户无此收藏夹"}'
          schema:
            type: string
        "402":
          description: '{"status": 402, "msg": "名称已存在，换个名字吧～"}'
          schema:
            type: string
        "403":
          description: '{"status":403,"msg":"修改失败"}'
          schema:
            type: string
      summary: 收藏夹重命名 Vera
      tags:
      - 社交
  /social/tag/sublist:
    post:
      consumes:
      - application/json
      description: 返回某一收藏夹内的文献信息
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.TagPaperListQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success": true, "status": 200,"num":int, "paper_list": paper_list,"msg":
            "查询成功"}'
          schema:
            type: string
        "210":
          description: '{"success": true, "status": 402,"num":0, "msg": "标签下没有文章"}'
          schema:
            type: string
        "400":
          description: '{"success": false,"status": 400, "msg":"用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"success": false,"status": 401, "msg": "用户无此收藏夹"}'
          schema:
            type: string
        "403":
          description: '{"status": 403, "msg": "收藏失败"}'
          schema:
            type: string
        "404":
          description: '{"success": false, "status": 404, "msg":"查询失败"}'
          schema:
            type: string
      summary: 返回某一收藏夹内的文献信息 Vera
      tags:
      - 社交
  /social/tag/taglist:
    post:
      consumes:
      - application/json
      description: 显示用户建立的所有收藏夹
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success": true, "status":  200, "msg": "查看收藏夹列表成功", "data":tags}'
          schema:
            type: string
        "400":
          description: '{"success": false,"status": 400, "msg":"用户ID不存在"}'
          schema:
            type: string
        "403":
          description: '{"success": false,"status": 403, "msg":"未查询到结果"}'
          schema:
            type: string
      summary: 显示用户建立的所有收藏夹 Vera
      tags:
      - 社交
  /user/headshot:
    post:
      description: 上传用户头像
      parameters:
      - description: 用户ID
        in: formData
        name: user_id
        required: true
        type: string
      - description: 新头像
        in: formData
        name: Headshot
        required: true
        type: file
      responses:
        "200":
          description: '{"status":200,"msg":"修改成功","data":{object}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status":401,"msg":"头像文件上传失败"}'
          schema:
            type: string
        "402":
          description: '{"status":402,"msg":"文件保存失败"}'
          schema:
            type: string
        "403":
          description: '{"status":403,"msg":"保存文件路径到数据库中失败"}'
          schema:
            type: string
      summary: 上传用户头像 ccf
      tags:
      - 用户
  /user/history:
    post:
      description: 获取用户浏览历史
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetBrowseHistoryQ'
      responses:
        "200":
          description: '{"status": 200, "msg": "获取成功", "data": {object}}'
          schema:
            type: string
      summary: txc
      tags:
      - 用户
  /user/info:
    get:
      consumes:
      - application/json
      description: 查看用户个人信息
      parameters:
      - description: user_id
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"获取用户信息成功","data":{object}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
      summary: 查看用户个人信息 ccf
      tags:
      - 用户
  /user/mod:
    post:
      consumes:
      - application/json
      description: 编辑用户信息
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.ModifyQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"修改个人信息成功","data":{object}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status":401,"msg":err.Error()}'
          schema:
            type: string
      summary: 编辑用户信息 ccf
      tags:
      - 用户
  /user/pwd:
    post:
      consumes:
      - application/json
      description: 编辑用户密码
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.PwdModifyQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"修改密码成功","data":{object}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status":401,"msg":"原密码输入错误"}'
          schema:
            type: string
        "402":
          description: '{"status":402,"msg":err1.Error()}'
          schema:
            type: string
      summary: 编辑用户密码 ccf
      tags:
      - 用户
swagger: "2.0"
