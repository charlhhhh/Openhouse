definitions:
  request.CreateCommentRequest:
    properties:
      comment_id:
        description: 可选，若为 null 表示一级评论
        type: integer
      content:
        maxLength: 500
        minLength: 1
        type: string
      post_id:
        type: integer
    required:
    - content
    - post_id
    type: object
  request.FollowListRequest:
    properties:
      page_num:
        minimum: 1
        type: integer
      page_size:
        maximum: 50
        minimum: 1
        type: integer
    required:
    - page_num
    - page_size
    type: object
  request.FollowRequest:
    properties:
      followed_uuid:
        type: string
    required:
    - followed_uuid
    type: object
  request.FollowStatusRequest:
    properties:
      target_uuid:
        type: string
    required:
    - target_uuid
    type: object
  request.LikeCommentRequest:
    properties:
      comment_id:
        type: integer
    required:
    - comment_id
    type: object
  request.LikePostRequest:
    properties:
      post_id:
        type: integer
    required:
    - post_id
    type: object
  request.ListCommentRequest:
    properties:
      page_num:
        minimum: 1
        type: integer
      page_size:
        maximum: 50
        minimum: 1
        type: integer
      post_id:
        type: integer
      sort_by:
        enum:
        - time
        - likes
        type: string
    required:
    - page_num
    - page_size
    - post_id
    type: object
  request.ListPostRequest:
    properties:
      page_num:
        description: 页码
        minimum: 1
        type: integer
      page_size:
        description: 每页条数
        maximum: 50
        minimum: 1
        type: integer
      sort_order:
        description: 时间排序 asc / desc（默认 desc）
        enum:
        - asc
        - desc
        type: string
    required:
    - page_num
    - page_size
    type: object
  request.ListReplyRequest:
    properties:
      comment_id:
        description: 父评论 ID
        type: integer
      page_num:
        description: 页码
        minimum: 1
        type: integer
      page_size:
        description: 每页条数，前端默认每次传 5
        maximum: 50
        minimum: 1
        type: integer
    required:
    - comment_id
    - page_num
    - page_size
    type: object
  request.PostDetailRequest:
    properties:
      post_id:
        type: integer
    required:
    - post_id
    type: object
  request.SendChatMessageRequest:
    properties:
      content:
        description: 聊天文本内容
        type: string
      receiver_uuid:
        description: 接收方用户UUID
        type: string
    required:
    - content
    - receiver_uuid
    type: object
  request.UpdateProfileInput:
    properties:
      avatar_url:
        type: string
      coin:
        type: integer
      email:
        type: string
      gender:
        type: string
      intro_long:
        type: string
      intro_short:
        type: string
      is_email_bound:
        type: boolean
      is_github_bound:
        type: boolean
      is_google_bound:
        type: boolean
      is_verified:
        type: boolean
      match_status:
        description: '"available" or "matching" or "matched"'
        type: string
      research_area:
        type: string
      tags:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  response.ChatHistoryPage:
    properties:
      list:
        items:
          $ref: '#/definitions/response.ChatMessageVO'
        type: array
      total:
        type: integer
    type: object
  response.ChatMessageVO:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      is_mine:
        description: 是否是当前用户发出的
        type: boolean
      receiver_uuid:
        type: string
      sender_uuid:
        type: string
    type: object
  response.CheckEmailDomainResponse:
    properties:
      school:
        type: string
    type: object
  response.CommentInfo:
    properties:
      author_uuid:
        description: 评论用户信息
        type: string
      avatar_url:
        type: string
      comment_id:
        type: integer
      content:
        type: string
      create_time:
        type: string
      id:
        type: integer
      is_liked:
        description: 当前用户是否点赞
        type: boolean
      like_number:
        type: integer
      post_id:
        type: integer
      replies:
        description: 子评论信息
        items:
          $ref: '#/definitions/response.CommentInfo'
        type: array
      replies_more_count:
        type: integer
      username:
        type: string
    type: object
  response.FollowCountResponse:
    properties:
      follower_count:
        description: 关注我的人
        type: integer
      following_count:
        description: 我关注的人
        type: integer
    type: object
  response.FollowStatusResponse:
    properties:
      is_following:
        type: boolean
    type: object
  response.FollowedUserInfo:
    properties:
      avatar_url:
        type: string
      username:
        type: string
      uuid:
        type: string
    type: object
  response.GetVerifyCodeQ:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  response.MatchHistory:
    properties:
      match_date:
        description: 匹配日期
        type: string
      match_user:
        allOf:
        - $ref: '#/definitions/response.MatchUserInfo'
        description: 匹配用户信息
    type: object
  response.MatchUserInfo:
    properties:
      avatar_url:
        type: string
      intro_short:
        type: string
      is_following:
        description: 当前用户是否已关注
        type: boolean
      llm_comment:
        description: LLM 推荐理由
        type: string
      match_score:
        description: 匹配分数
        type: integer
      research_area:
        type: string
      tags:
        items:
          type: string
        type: array
      username:
        type: string
      uuid:
        type: string
    type: object
  response.PostDetailResponse:
    properties:
      author_uuid:
        type: string
      avatar_url:
        type: string
      comment_number:
        type: integer
      content:
        type: string
      create_date:
        type: string
      favorite_number:
        type: integer
      image_urls:
        items:
          type: string
        type: array
      intro_long:
        type: string
      is_favorited:
        type: boolean
      is_following:
        type: boolean
      is_liked:
        type: boolean
      post_id:
        type: integer
      star_number:
        type: integer
      title:
        type: string
      username:
        description: 新增发帖用户信息字段
        type: string
      view_number:
        type: integer
    type: object
  response.PostInfo:
    properties:
      author_uuid:
        type: string
      avatar_url:
        type: string
      comment_number:
        type: integer
      content:
        type: string
      create_date:
        type: string
      favorite_number:
        type: integer
      image_urls:
        items:
          type: string
        type: array
      intro_long:
        type: string
      is_following:
        type: boolean
      post_id:
        type: integer
      star_number:
        type: integer
      title:
        type: string
      username:
        description: 新增发帖用户信息字段
        type: string
      view_number:
        type: integer
    type: object
  response.PostListResponse:
    properties:
      list:
        description: 当前页帖子
        items:
          $ref: '#/definitions/response.PostInfo'
        type: array
      total:
        description: 总条数
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  service.AuthResult:
    properties:
      token:
        type: string
    type: object
  service.ProfileResponse:
    properties:
      avatar_url:
        type: string
      coin:
        type: integer
      email:
        type: string
      gender:
        type: string
      intro_long:
        type: string
      intro_short:
        type: string
      is_email_bound:
        type: boolean
      is_github_bound:
        type: boolean
      is_google_bound:
        type: boolean
      is_verified:
        type: boolean
      match_status:
        description: '"available" or "matching" or "matched"'
        type: string
      research_area:
        type: string
      tags:
        items:
          type: string
        type: array
      username:
        type: string
      uuid:
        type: string
    type: object
  v1.EmailLoginRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/email/academic_check:
    get:
      consumes:
      - application/json
      description: Check if the email domain belongs to an academic institution
      parameters:
      - description: Email address
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CheckEmailDomainResponse'
        "400":
          description: '{"msg": "Invalid email format", "status": 400}'
          schema:
            type: string
        "500":
          description: '{"msg": "Email cannot be empty", "status": 500}'
          schema:
            type: string
      summary: Check if the email domain belongs to an academic institution
      tags:
      - Auth
  /api/v1/auth/email/send:
    post:
      consumes:
      - application/json
      description: 用户点击"获取验证码"按钮，系统向用户提供的邮箱发送6位验证码，用户需要在申请表单中填入验证码才可以成功完成身份验证，否则不应该可以提交申请。验证码时限为10分钟，超时无效
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetVerifyCodeQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "邮件发送成功","status": 200}'
          schema:
            type: string
        "400":
          description: '{"msg": "数据格式错误", "status": 400}'
          schema:
            type: string
        "401":
          description: '{"msg": "没有该用户", "status": 401}'
          schema:
            type: string
        "402":
          description: '{"msg": "验证码存储失败","status": 402}'
          schema:
            type: string
        "403":
          description: '{"msg": "发送邮件失败","status": 403}'
          schema:
            type: string
      summary: 获取申请验证码
      tags:
      - Auth
  /api/v1/auth/email/verify:
    post:
      consumes:
      - application/json
      description: |-
        验证邮箱验证码是否正确,如果正确则登录或注册用户
        如果用户已经注册，则绑定邮箱到当前用户
      parameters:
      - description: 邮箱+验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.EmailLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.AuthResult'
              type: object
      summary: 邮箱验证码验证
      tags:
      - Auth
  /api/v1/auth/github_callback:
    get:
      consumes:
      - application/json
      description: |-
        用户在GitHub登录后，GitHub会回调该接口，并传递code参数
        该接口会使用code参数获取用户信息，并进行登录或注册
        如果用户已经注册，则绑定GitHub账号到当前用户
      parameters:
      - description: GitHub回调Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.AuthResult'
              type: object
      summary: GitHub登录回调, 前端不调用该API
      tags:
      - Auth
  /api/v1/auth/google_callback:
    get:
      consumes:
      - application/json
      description: |-
        用户在Google登录后，Google会回调该接口，并传递code参数
        该接口会使用code参数获取用户信息，并进行登录或注册
        如果用户已经注册，则绑定Google账号到当前用户
        如果用户没有注册，则进行注册
        如果用户已经注册，则绑定Google账号到当前用户
      parameters:
      - description: Google 回调 code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: 跳转至前端 oauth_success 页面
          schema:
            type: string
      summary: Google 登录回调，前端不调用该接口
      tags:
      - Auth
  /api/v1/chat/history:
    get:
      consumes:
      - application/json
      parameters:
      - description: 对方 UUID
        in: query
        name: peer_uuid
        required: true
        type: string
      - description: 页码，从 1 开始
        in: query
        name: page
        required: true
        type: integer
      - description: 每页条数
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ChatHistoryPage'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取聊天历史（分页）
      tags:
      - Chat
  /api/v1/chat/more:
    get:
      consumes:
      - application/json
      parameters:
      - description: 对话对象 UUID
        in: query
        name: peer_uuid
        required: true
        type: string
      - description: 最后一条消息的时间戳，如 2024-05-01T15:04:05Z
        in: query
        name: last_time
        required: true
        type: string
      - description: 最后一条消息的 ID
        in: query
        name: last_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.ChatMessageVO'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: 上滑查看更多历史消息
      tags:
      - Chat
  /api/v1/chat/poll:
    get:
      consumes:
      - application/json
      parameters:
      - description: 起始时间 (RFC3339)
        in: query
        name: since
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.ChatMessageVO'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: 轮询新消息（拉取当前用户自指定时间之后的所有新消息）
      tags:
      - Chat
  /api/v1/chat/recent:
    get:
      consumes:
      - application/json
      parameters:
      - description: 对话对象 UUID
        in: query
        name: peer_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.ChatMessageVO'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取最近聊天记录 获取最近20条消息（首次加载）
      tags:
      - Chat
  /api/v1/chat/send:
    post:
      consumes:
      - application/json
      parameters:
      - description: receiver_uuid, content
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SendChatMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 发送聊天消息
      tags:
      - Chat
  /api/v1/comments/create:
    post:
      consumes:
      - application/json
      description: 创建一级评论或子评论
      parameters:
      - description: 评论请求体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 评论成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未登录
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建评论
      tags:
      - 评论 Comments
  /api/v1/comments/like:
    post:
      consumes:
      - application/json
      parameters:
      - description: 点赞请求体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LikeCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 点赞成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 点赞评论
      tags:
      - 评论 Comments
  /api/v1/comments/list:
    post:
      consumes:
      - application/json
      description: 获取某个帖子的一级评论（分页、排序）并返回每条评论的前三条子评论（按时间升序）
      parameters:
      - description: 帖子ID + 分页参数 + 排序
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ListCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.CommentInfo'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取评论列表（一级）
      tags:
      - 评论 Comments
  /api/v1/comments/replies:
    post:
      consumes:
      - application/json
      description: 分页加载某条评论下的子评论（按时间升序）
      parameters:
      - description: comment_id + 分页参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ListReplyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.CommentInfo'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取子评论
      tags:
      - 评论 Comments
  /api/v1/comments/unlike:
    post:
      consumes:
      - application/json
      parameters:
      - description: 取消点赞请求体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LikeCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 取消点赞成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 取消点赞评论
      tags:
      - 评论 Comments
  /api/v1/match/confirm:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Confirm match
      tags:
      - Match
  /api/v1/match/history:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.MatchHistory'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get match history
      tags:
      - Match
  /api/v1/match/today:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.MatchUserInfo'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get today's match result
      tags:
      - Match
  /api/v1/match/trigger:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Trigger match calculation for the current user
      tags:
      - Match
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Trigger daily match (testing API)
      tags:
      - Match
  /api/v1/media/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload image file to OSS and return an accessible URL
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Return OSS file URL
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Upload file
      tags:
      - Media File
  /api/v1/posts/detail:
    post:
      consumes:
      - application/json
      description: 根据 post_id 获取一条帖子详情 + 是否点赞/收藏
      parameters:
      - description: 帖子ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PostDetailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PostDetailResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取帖子详情
      tags:
      - 帖子 Posts
  /api/v1/posts/star:
    post:
      consumes:
      - application/json
      description: 用户点赞帖子（不能重复）
      parameters:
      - description: 帖子ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LikePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 点赞帖子
      tags:
      - 帖子 Posts
  /api/v1/posts/unstar:
    post:
      consumes:
      - application/json
      description: 用户取消点赞帖子
      parameters:
      - description: 帖子ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LikePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 取消点赞
      tags:
      - 帖子 Posts
  /api/v1/user/{uuid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.ProfileResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get user information BY UUID
      tags:
      - User
  /api/v1/user/follow/count:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.FollowCountResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get follow/follower statistics
      tags:
      - User
  /api/v1/user/follow/status:
    post:
      consumes:
      - application/json
      parameters:
      - description: Target user UUID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.FollowStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.FollowStatusResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Check follow status
      tags:
      - User
  /api/v1/user/followers:
    post:
      consumes:
      - application/json
      parameters:
      - description: Pagination
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.FollowListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.FollowedUserInfo'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get followers list
      tags:
      - User
  /api/v1/user/following:
    post:
      consumes:
      - application/json
      parameters:
      - description: Pagination
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.FollowListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.FollowedUserInfo'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get following list
      tags:
      - User
  /api/v1/user/following/posts:
    post:
      consumes:
      - application/json
      parameters:
      - description: Pagination parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ListPostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PostListResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get followed users' posts
      tags:
      - User
  /api/v1/user/profile:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.ProfileResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get user profile
      tags:
      - Profile
    post:
      consumes:
      - application/json
      parameters:
      - description: Fields to update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateProfileInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update user profile (partial fields)
      tags:
      - Profile
  /api/v1/user/unfollow:
    post:
      consumes:
      - application/json
      parameters:
      - description: Target user UUID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.FollowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Unfollow a user
      tags:
      - User
  /api/v1/users/follow:
    post:
      consumes:
      - application/json
      parameters:
      - description: Target user UUID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.FollowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Follow a user
      tags:
      - User
  /test:
    get:
      consumes:
      - application/json
      description: 测试前后端联通性
      parameters:
      - description: ping
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"message": "pong", "success": true}'
          schema:
            type: string
      summary: 测试前后端联通性
      tags:
      - 测试
securityDefinitions:
  ApiKeyAuth:
    description: JWT Token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
